{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copy of Monday: Normality Tests in Python","provenance":[{"file_id":"14g3nGUfOJqd_yqqmmq6k17irRW7fT295","timestamp":1588678129584}],"collapsed_sections":[],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"Nipq9BTtJozR","colab_type":"text"},"source":["<font color=\"green\">*To start working on this notebook, or any other notebook that we will use in the Moringa Data Science Course, we will need to save our own copy of it. We can do this by clicking File > Save a Copy in Drive. We will then be able to make edits to our own copy of this notebook.*</font>"]},{"cell_type":"markdown","metadata":{"id":"KoNHMHC9GK3b","colab_type":"text"},"source":["# Monday: Normality Tests with Python"]},{"cell_type":"markdown","metadata":{"id":"ghkmT_RKGOnf","colab_type":"text"},"source":["When we work with a dataset as a data scientist, it can be very helpful to test the data for normality. The normality tests are statistical processes used to determine if a sample or any group of data fits a standard normal distribution. Normality tests are used to influence the decision when working with a sample of data on whether to use specific kinds of statistical methods during analysis i.e. parametric or nonparametric methods.\n","\n"]},{"cell_type":"markdown","metadata":{"id":"e1f8QJ4ARaD8","colab_type":"text"},"source":["## Importing our Libraries"]},{"cell_type":"code","metadata":{"id":"QOluu3PVRdYZ","colab_type":"code","colab":{}},"source":["# Importing matplotlib\n","from matplotlib import pyplot as plt\n","\n","# Importing functions from numpy\n","from numpy.random import seed\n","from numpy.random import randn"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"3JS_Y2SCHA8-","colab_type":"text"},"source":["## 1.0 Histogram Plot\n"]},{"cell_type":"code","metadata":{"id":"xo7KQIWwGJQl","colab_type":"code","outputId":"7fdd3a0f-3952-40ea-ba51-45d2d491e60d","executionInfo":{"status":"ok","timestamp":1588860388095,"user_tz":-180,"elapsed":1233,"user":{"displayName":"paul mwaura","photoUrl":"","userId":"05571276976991411894"}},"colab":{"base_uri":"https://localhost:8080/","height":265}},"source":["# Example 1\n","# ---\n","# A histogram can be used to test whether data is normally distributed. \n","# This test simply consists of looking at the histogram and discerning \n","# whether it approximates the bell curve of a normal distribution.\n","# ---\n","#\n","\n","# generate univariate observations\n","data = 5 * randn(100) + 50\n","\n","# histogram plot\n","plt.hist(data, alpha=0.9, bins=10)\n","plt.show()\n","\n","# From the resulting histogram, we can see a Gaussian-like shape to the data, \n","# that although is not strongly the familiar bell-shape, is a rough approximation."],"execution_count":2,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"s3hbig-2IdtH","colab_type":"text"},"source":["### <font color=\"green\">1.0 Challenges</font>"]},{"cell_type":"code","metadata":{"id":"MCu8s4NXndHt","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":71},"outputId":"8bbe1297-ae52-4a55-abeb-3e818c27bf7e","executionInfo":{"status":"ok","timestamp":1588860388502,"user_tz":-180,"elapsed":1634,"user":{"displayName":"paul mwaura","photoUrl":"","userId":"05571276976991411894"}}},"source":["import pandas as pd\n","import seaborn as sns"],"execution_count":3,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/statsmodels/tools/_testing.py:19: FutureWarning: pandas.util.testing is deprecated. Use the functions in the public API at pandas.testing instead.\n","  import pandas.util.testing as tm\n"],"name":"stderr"}]},{"cell_type":"code","metadata":{"id":"3F2wvadV4KTl","colab_type":"code","outputId":"35320166-4fdf-4b78-bc97-efd33294d3b6","executionInfo":{"status":"ok","timestamp":1588860389780,"user_tz":-180,"elapsed":2882,"user":{"displayName":"paul mwaura","photoUrl":"","userId":"05571276976991411894"}},"colab":{"base_uri":"https://localhost:8080/","height":315}},"source":["# Challenge 1\n","# ---\n","# Question: Determine whether the given data follows a normal distribution using the histogram plot\n","# ---\n","# Dataset url = http://bit.ly/GaussianDistributionDataset1\n","# \n","df = pd.read_csv(\"http://bit.ly/GaussianDistributionDataset1\")\n","\n","df.hist(bins=30)\n","\n","# As we can see the data follows the normal distribution"],"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[<matplotlib.axes._subplots.AxesSubplot object at 0x7ff407789978>]],\n","      dtype=object)"]},"metadata":{"tags":[]},"execution_count":4},{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAXcAAAEICAYAAACktLTqAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjEsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+j8jraAAAZWklEQVR4nO3df5xcdX3v8dfbhCSErYQQXDFBg/wSSBTJltJS6wbUQuM19Jb6oA8eGjS96fUhkqspGuVW0WtrbK/lolW8uaKJyGWlKQrFqnBDVkq9RBPUBIhIhAiJgUBJggtRSfvpH+e7chxmdufX7ky+eT8fj3nsnvM9Pz5zZuY953znzBlFBGZmlpcXdLoAMzNrP4e7mVmGHO5mZhlyuJuZZcjhbmaWIYe7mVmGHO5mZhlyuB/AJF0iaYOkX0haNcJ0cyR9U9ITkqp+sUHShZK2SHpa0o8lvabUNlXSZ9L8eyXdUTHv6ZLukDQk6TFJS0tt2yTtS21Dkm4ttUnSRyXtSMsdlHRqxbJfJ+nuVNd2SW8utZ0maaOkZ9Lf0+qpS9KLJF0v6adpvf8i6bcq6rpc0sOSnpI0IOmFVbbZdEmPS7qzNG6SpDXpfoek/op5Jkv6bKrnSUn/KGlmqf1kSbenurZK+sMGln2FpGdL23pI0stL7RPS9v6ppJ9J+p6kaZX3qxUjPSaSLpN0T1r3Q5Iua+e6rUJE+HaA3oD/DJwPXA2sGmG6k4DFwMLiIX9e++uBnwBnUrzhzwRmltq/BAwARwETgHmlthnALuAiYDLwG8DJpfZtwOtq1PVm4KfAy9NyPwbcXWo/JS37PGAicCRwXGqblGp+d1rvpWl40mh1pfW9Bzg6rXcJ8ATQk9oXAT8EjgF6gJuA1VXq/z/AHcCdpXGTgP8G/C6wE+ivmOe9wA+AXmAK8EXgxtQ2EfhRqm0CcDbwNHBincu+AvjSCM+DjwK3Ay8DBMwBpjTxvBusXHedj8l7gdPT/TwptV3Y6ddRrreOF+BbGx7E4kW7qo7pjqd6uH8bWFxjnlcATwEvrNH+V8C1I6xzpHB/H3BDafhU4Oel4f8L/I8a874B2AGoNO5h4Nx66qqyvKdIb1rAGuCyUtvvAD8HplaM+//A28rhXrHM7VUC+Grgr0vDC4D70/9zgKGK+3RrtW1QY9k1wx04Ii37uBrtLwCWAz8G/hW4AZheY9pa4T7iY1Jl+k8CnxqL14Rv4W6Zg52kCUAfcFTqBtgu6e8kHZomOYNiD+vDqVtms6Q/Ki3iTOBJSd+WtCt1M7y0YjXXpe6LWyW9qjR+ADhO0omSDqHYY/5GxbJJ69wp6UuSpqe2U4FNkVIi2ZTG11vX8DY4jWKvc2t5dMX/k4ETStvs74BLgEav33ENcJakl0iaSnFk8fURph/ew67Xf0rdPfdKekdp/FxgP3CBpEcl/UjSO0vt76I4Cnwt8BJgN/DpBtYLoz8mvyJJwGuAextch9XJ4W69wCHABRQvttOAVwP/PbXPogiXvRQv+kuA1ZJOLrUvApYCLwUeAq4vLf8iYDZFV8A64Julft6dwJ3A/cA+4I8pDumHzQLeAvwRRbAeCnwqtfWkmsr2UnS/1FMXAKkv/VrgwxExvLxvAH8qabakwymOMACmpr+XAusjYmPl8urwAPAIxR7uU8DJwEdS2/0UXUmXSTpE0hsownZqtQVVcUNa3lHAfwE+KOlPUtss4HDgROBYisf7CkmvT+3/Fbg8IrZHxC8ojgIukDSxgfs22mNSdgVF/nyhgeVbAxzuti/9/VRE7IyIJ4C/Bf6g1P4s8NGI+GVEfIsipN9Qav9KRHw3In4OfBj4nRSKRMS/RMS+iHgmIj4G7KF4EwH4IPCbFH3bU9K8t6c92uFlfyEifhQRQxRdLcN1DQGVH3K+EPhZPXUBpKOTfwTuSrUN+zzFG8EgxZ7lujR+u6SXUIT75SNs05F8muIo4EjgMOBG0p57RDxLsfe8AHgUWEYR2NvrWXBE3BcRP42If4uIbwNXUYQ4PPc4fyQ9HpsojpyGt+fLgK9I2iNpD7AF+DeKN3+Gx6e23wVuKY1bnpYx2mNCWtYlwFuBBemNxMaAw/0gFxG7KcKjfChdeVj9vNkq2mvNW3WVPNflcRrw5bS3uD8iVlH0DZ9Sx7LvBV6ZDu+HvZLnDvNHrEvSZOCrFPf9z36twIh/j4gPRcTsiJiVlrkj3c6g+CD2PkmPUgToGamrY8Io9334Pq+KiCdTsH0qzT8jrXtTRLw2Io6MiN+n+PD3O3Ust5rytt5UGkeV/x8BzouIaaXblIjYker61XiKo603lsatSMsY7TFB0tsp+vbPiYi63rSsSZ3u9Pet+RvFWQdTKM4yuTb9P7HKdEptp1C8oKcAk0vtHwG+C7yIIlz/mfQhHkWXzVbgL9L6zqLYE3tFaj+bon/2tDTtlcA/p7aXpuknpXVeBjwOHJnaP0QRFL0UOxpvoTg7ZFpqfztFd8rLKbombiB9SMpzZ2YspdgTvoRfPzNjpLoOodhj/2qN7TUdOC5tt1OAe4AlqW0y8OLSbSmwHnhxaf7J6f5upzjCmUL6kJGiG+IfKLpIDgE+AOwozfvKNP1U4M/T/Z9c57IXpsdPFG9CO4BFpXnvAP53WsbJFF1A56S2d1McqbwsDR8FLKzxvBtk5LNlaj0mF1EckZxcbbm+tTkfOl2Aby08eEW/ZVTcrqAI1SHgpWm62VWm21ZaziHAZyi6TB6lOIthSqn9VIozQ54G7gP+sKKOd6Qg2Z1C85jSfJvSfP8KrAX6SvNNoeim2EnR/3w3FWdWUHSnPJ5u1wJHlNpeDWyk6HK4G3h1nXW9Nm2DZ9J2Gr69JrWfSNH//UwKp/eM8BhcTMXZMhRnCFVu79mp7UjguhSseyje3M4ozfs3qd4hiu6a4xtY9vVpOw9RnMp5acW8Myk+TxgCHgT+rNT2AopTMO+nePP+MfBXNe7zIFXCfbTHhOKN6tmKbf7ZTr+Ocr0Nv+ObmVlG3OduZpYhh7uZWYYc7mZmGXK4m5llqJFvn42ZGTNmxOzZsztdxq88/fTTHHbYYZ0uoyGueXy45vHhmuuzcePGJyLiqKqNo51OQ/FtvV3APaVx04HbKL5KfRvp9DSK82s/SXFe9Cbg9HpO2Zk3b150k3Xr1nW6hIa55vHhmseHa64PsCFq5Go93TKrgHMrxi0H1kbECRTnLg9//fg8imuAnEBxGdWr61i+mZm12ajhHhF3AE9WjF4IrE7/r6a4Hsbw+C+mN5W7gGmSjm5XsWZmVp+6vsQkaTZwS0TMScN7orjGxPClO3dHxDRJtwArIuLO1LYWeF9EbKiyzCUUe/f09vbOGxgYaM89aoOhoSF6eno6XUZDXPP4cM3jwzXXZ/78+Rsjoq9aW8sfqEZEqMZPt40y30pgJUBfX1/09/e3WkrbDA4O0k311MM1jw/XPD5cc+uaPRXyseHulvR3Vxq/g+LyrcNmpXFmZjaOmg33myl+CIH096bS+LeqcCawNyJ2tlijmZk1aNRuGUnXA/3ADEnbKS7TugK4QdJiiqvmDf8i/T9RXPx/K8UV9d42BjWbmdkoRg33iPiTGk3nVJk2gHdWmdbMzMaRLz9gZpahrrj8gNnBZPbyr9U13bYVC8a4EsuZ99zNzDLkcDczy5DD3cwsQw53M7MMOdzNzDLkcDczy5DD3cwsQw53M7MMOdzNzDLkcDczy5DD3cwsQw53M7MMOdzNzDLkcDczy5Av+WtZaffldCuXt2zufi6usQ5fote6iffczcwy5HA3M8uQw93MLEMOdzOzDDnczcwy5LNlzNqk3jN1zMaD99zNzDLkcDczy5DD3cwsQw53M7MMOdzNzDLkcDczy5DD3cwsQw53M7MMOdzNzDLkcDczy5DD3cwsQy2Fu6R3S7pX0j2Srpc0RdKxktZL2irpy5ImtatYMzOrT9PhLmkmcCnQFxFzgAnAhcDHgSsj4nhgN7C4HYWamVn9Wu2WmQgcKmkiMBXYCZwNrEntq4HzW1yHmZk1SBHR/MzSUuAvgX3ArcBS4K60146kY4Cvpz37ynmXAEsAent75w0MDDRdR7sNDQ3R09PT6TIa4poLm3fsrWu6uTMPb2p5vYfCY/saLqsp9dY4Gj83xkcnap4/f/7GiOir1tb09dwlHQEsBI4F9gB/D5xb7/wRsRJYCdDX1xf9/f3NltJ2g4ODdFM99XDNhYvrvKb6tovqW2/l8pbN3c8nNo/PzyDUW+No/NwYH91WcyvdMq8DHoqIxyPiWeBG4CxgWuqmAZgF7GixRjMza1Ar4f4wcKakqZIEnAPcB6wDLkjTLAJuaq1EMzNrVNPHlxGxXtIa4G5gP/A9im6WrwEDkj6axl3TjkLt4OafsDNrTEudhxHxIeBDFaMfBM5oZblmZtYaf0PVzCxDDnczsww53M3MMuRwNzPLkMPdzCxDDnczsww53M3MMjQ+F8kw6zL+UpTlznvuZmYZcribmWXI4W5mliH3uZt1qXo/F9i2YsEYV2IHIu+5m5llyOFuZpYhh7uZWYYc7mZmGXK4m5llyOFuZpYhh7uZWYYc7mZmGXK4m5llyOFuZpYhh7uZWYYc7mZmGXK4m5llyOFuZpYhh7uZWYYc7mZmGXK4m5llyOFuZpYhh7uZWYYc7mZmGXK4m5llyOFuZpahlsJd0jRJayT9UNIWSb8tabqk2yQ9kP4e0a5izcysPq3uuV8FfCMiXgG8CtgCLAfWRsQJwNo0bGZm46jpcJd0OPB7wDUAEfHLiNgDLARWp8lWA+e3WqSZmTVGEdHcjNJpwErgPoq99o3AUmBHRExL0wjYPTxcMf8SYAlAb2/vvIGBgabqGAtDQ0P09PR0uoyG5F7z5h17x7ia+vQeCo/t63QVv27uzMNHbM/9udEtOlHz/PnzN0ZEX7W2VsK9D7gLOCsi1ku6CngKeFc5zCXtjogR+937+vpiw4YNTdUxFgYHB+nv7+90GQ3JvebZy782tsXUadnc/Xxi88ROl/Frtq1YMGJ77s+NbtGJmiXVDPdW+ty3A9sjYn0aXgOcDjwm6ei04qOBXS2sw8zMmtB0uEfEo8Ajkk5Ko86h6KK5GViUxi0CbmqpQjMza1irx5fvAq6TNAl4EHgbxRvGDZIWAz8B3tziOszMrEEthXtEfB+o1t9zTivLNTOz1vgbqmZmGXK4m5llyOFuZpYhh7uZWYYc7mZmGXK4m5llyOFuZpYhh7uZWYYc7mZmGXK4m5llyOFuZpYhh7uZWYYc7mZmGequn5SxbNTzy0nL5u6nf+xLMTsoec/dzCxD3nO3juqW30Y9kI22DZfN3c/Fy7826m+tWl68525mliGHu5lZhhzuZmYZcribmWXI4W5mliGHu5lZhhzuZmYZcribmWXIX2IyO0jU+4Uxf9kpD95zNzPLkMPdzCxDDnczsww53M3MMuRwNzPLkMPdzCxDDnczsww53M3MMtRyuEuaIOl7km5Jw8dKWi9pq6QvS5rUeplmZtaIduy5LwW2lIY/DlwZEccDu4HFbViHmZk1oKVwlzQLWAB8Lg0LOBtYkyZZDZzfyjrMzKxxiojmZ5bWAB8DfgP4c+Bi4K60146kY4CvR8ScKvMuAZYA9Pb2zhsYGGi6jnYbGhqip6en02U0pNtq3rxj76jT9B4Kj+0bh2LayDU/Z+7Mw9u/0KTbns/16ETN8+fP3xgRfdXamr5wmKQ3ArsiYqOk/kbnj4iVwEqAvr6+6O9veBFjZnBwkG6qpx7dVvPFdVykatnc/Xxi84F17TrX/JxtF/W3fZnDuu35XI9uq7mVR/ws4E2S/gCYArwQuAqYJmliROwHZgE7Wi/TzMwa0XSfe0S8PyJmRcRs4ELg9oi4CFgHXJAmWwTc1HKVZmbWkLE4z/19wHskbQWOBK4Zg3WYmdkI2tIRFxGDwGD6/0HgjHYs18zMmuNvqJqZZcjhbmaWIYe7mVmGHO5mZhlyuJuZZcjhbmaWIYe7mVmGHO5mZhlyuJuZZcjhbmaWIYe7mVmGDqwLU1vHza7jOu1m1nneczczy5DD3cwsQw53M7MMOdzNzDLkcDczy5DD3cwsQz4V0nx6o1mGvOduZpYhh7uZWYYc7mZmGXK4m5llyOFuZpYhny1jZk1p5CyrbSsWjGElVo333M3MMuRwNzPLkMPdzCxDDnczsww53M3MMuRwNzPLkMPdzCxDDnczsww53M3MMtR0uEs6RtI6SfdJulfS0jR+uqTbJD2Q/h7RvnLNzKwerey57weWRcQpwJnAOyWdAiwH1kbECcDaNGxmZuOo6XCPiJ0RcXf6/2fAFmAmsBBYnSZbDZzfapFmZtYYRUTrC5FmA3cAc4CHI2JaGi9g9/BwxTxLgCUAvb298wYGBlquo12Ghobo6enpdBkNaaXmzTv2trma+vQeCo/t68iqm+aamzN35uENTX+wvQabNX/+/I0R0VetreVwl9QDfAv4y4i4UdKecphL2h0RI/a79/X1xYYNG1qqo50GBwfp7+/vdBkNaaXmTv2G6rK5+/nE5gPrwqSuuTmNXhXyYHsNNktSzXBv6WwZSYcA/wBcFxE3ptGPSTo6tR8N7GplHWZm1rhWzpYRcA2wJSL+ttR0M7Ao/b8IuKn58szMrBmtHKudBbwF2Czp+2ncB4AVwA2SFgM/Ad7cWolmdqCrt+vPP+rRPk2He0TcCahG8znNLtfMzFrnb6iamWXowPrY3xrSqbNgzKzzvOduZpYhh7uZWYYc7mZmGXK4m5llyOFuZpYhh7uZWYYc7mZmGXK4m5llyOFuZpYhh7uZWYYc7mZmGfK1ZQ5A1a4Zs2zufi72tWTMLPGeu5lZhhzuZmYZcribmWXI4W5mliGHu5lZhhzuZmYZ8qmQXcQ/i2dm7eI9dzOzDDnczcwy5HA3M8uQ+9zNrGsMf+402uU0tq1YMF4lHbC8525mliHvubfAZ7eYdUa7X3s5Hgl4z93MLEMOdzOzDDnczcwy5HA3M8uQw93MLEMOdzOzDB3wp0LWe0pUI6c6bd6x179HamYtGYtsasSY7LlLOlfS/ZK2Slo+FuswM7Pa2r7nLmkC8Gng9cB24LuSbo6I+9q9LjOzduj0XvZYGIs99zOArRHxYET8EhgAFo7BeszMrAZFRHsXKF0AnBsRf5qG3wL8VkRcUjHdEmBJGjwJuL+thbRmBvBEp4tokGseH655fLjm+rwsIo6q1tCxD1QjYiWwslPrH4mkDRHR1+k6GuGax4drHh+uuXVj0S2zAzimNDwrjTMzs3EyFuH+XeAEScdKmgRcCNw8BusxM7Ma2t4tExH7JV0CfBOYAHw+Iu5t93rGWFd2F43CNY8P1zw+XHOL2v6BqpmZdZ4vP2BmliGHu5lZhhzuFN+qlfQ9Sbek4WMlrU+XT/hy+mC4a0iaJmmNpB9K2iLptyVNl3SbpAfS3yM6XWeZpHdLulfSPZKulzSlG7ezpM9L2iXpntK4qttWhU+m+jdJOr1L6v2b9NzYJOkrkqaV2t6f6r1f0u+Pd721ai61LZMUkmak4Y5v41RH1ZolvStt63sl/XVpfMe3s8O9sBTYUhr+OHBlRBwP7AYWd6Sq2q4CvhERrwBeRVH7cmBtRJwArE3DXUHSTOBSoC8i5lB80H4h3bmdVwHnVoyrtW3PA05ItyXA1eNUY9kqnl/vbcCciHgl8CPg/QCSTqHY7qemeT6TLhcy3lbx/JqRdAzwBuDh0uhu2MZQpWZJ8ym+ff+qiDgV+J9pfFds54M+3CXNAhYAn0vDAs4G1qRJVgPnd6a655N0OPB7wDUAEfHLiNhD8SRbnSbrqpqTicChkiYCU4GddOF2jog7gCcrRtfatguBL0bhLmCapKPHp9JCtXoj4taI2J8G76L4rgkU9Q5ExC8i4iFgK8XlQsZVjW0McCXwXqB8lkfHtzHUrPkdwIqI+EWaZlca3xXb+aAPd+B/UTyh/j0NHwnsKb04tgMzO1FYDccCjwNfSF1Jn5N0GNAbETvTNI8CvR2rsEJE7KDYq3mYItT3Ahvp7u1cVmvbzgQeKU3Xjffh7cDX0/9dW6+khcCOiPhBRVPX1gycCLwmdS1+S9JvpvFdUfNBHe6S3gjsioiNna6lAROB04GrI+LVwNNUdMFEcX5r15zjmvqoF1K8Mb0EOIwqh+UHgm7btiORdDmwH7iu07WMRNJU4APABztdS4MmAtOBM4HLgBvSkX9XOKjDHTgLeJOkbRRXrzyboj97Wuo+gO67fMJ2YHtErE/DayjC/rHhw9X0d1eN+TvhdcBDEfF4RDwL3Eix7bt5O5fV2rZde6kNSRcDbwQuiue+zNKt9R5H8cb/g/RanAXcLenFdG/NULwWb0xdRt+hOPqfQZfUfFCHe0S8PyJmRcRsig9Abo+Ii4B1wAVpskXATR0q8Xki4lHgEUknpVHnAPdRXOJhURrXVTVTdMecKWlq2rMZrrlrt3OFWtv2ZuCt6YyOM4G9pe6bjpF0LkVX45si4plS083AhZImSzqW4kPK73SixrKI2BwRL4qI2em1uB04PT3Xu3IbJ18F5gNIOhGYRHFVyO7YzhHhW7Fj0w/ckv5/eXowtgJ/D0zudH0VtZ4GbAA2UTzBjqD4rGAt8ADw/4Dpna6zouYPAz8E7gGuBSZ343YGrqf4XOBZipBZXGvbAqL4YZofA5spzgbqhnq3UvT5fj/dPlua/vJU7/3Aed2yjSvatwEzumUbj7CdJwFfSs/pu4Gzu2k7+/IDZmYZOqi7ZczMcuVwNzPLkMPdzCxDDnczsww53M3MMuRwNzPLkMPdzCxD/wFNMgjsWtmLXwAAAABJRU5ErkJggg==\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"5_NJrZ9dIiTA","colab_type":"code","outputId":"56436e13-c0bc-461a-9c36-b94261d86f4d","executionInfo":{"status":"ok","timestamp":1588860391286,"user_tz":-180,"elapsed":4309,"user":{"displayName":"paul mwaura","photoUrl":"","userId":"05571276976991411894"}},"colab":{"base_uri":"https://localhost:8080/","height":281}},"source":["# Challenge 2\n","# ---\n","# Question: Does the prices data follow a normal distribution? \n","# If your sample follows a normal distribution, does this makes sense to you? Explain why.\n","# If your sample does not follow a normal distribution (e.g., it could be skewed left or right, \n","# have a uniform distribution, or have some other shape), then why might this be the reason?\n","# ---\n","# Dataset url = http://bit.ly/NormalisationPricesDataset\n","# \n","prices = pd.read_csv(\"http://bit.ly/NormalisationPricesDataset\")\n","\n","cd = {'yes': 1, \"no\": 0}\n","\n","prices['cd'] = prices['cd'].map(cd)\n","prices['multi'] = prices['multi'].map(cd)\n","prices['premium'] = prices['premium'].map(cd)\n","\n","prices.drop(['Unnamed: 0'], axis=1)\n","\n","prices.hist(bins=10)\n","\n","plt.show()"],"execution_count":5,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 12 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"pmX6aGACHQAX","colab_type":"text"},"source":["## 2.0 Quantile-Quantile (Q-Q) Plot\n"]},{"cell_type":"code","metadata":{"id":"LEfBjhplHYGz","colab_type":"code","outputId":"5369ced8-ebb9-4adc-842e-ccd4ae350d96","executionInfo":{"status":"ok","timestamp":1588860391287,"user_tz":-180,"elapsed":4280,"user":{"displayName":"paul mwaura","photoUrl":"","userId":"05571276976991411894"}},"colab":{"base_uri":"https://localhost:8080/","height":279}},"source":["# Example 1\n","# ---\n","# The Q-Q plot generates its own sample of the idealized distribution that we are comparing with, \n","# in this case the Gaussian distribution. The idealized samples are divided into groups (e.g. 5), called quantiles. \n","# Each data point in the sample is paired with a similar member from the idealized distribution at the same cumulative distribution.\n","# The resulting points are plotted as a scatter plot with the idealized value on the x-axis and the data sample on the y-axis.\n","# A perfect match for the distribution will be shown by a line of dots on a 45-degree angle from the bottom left of the plot to the top right. \n","# Often a line is drawn on the plot to help make this expectation clear. Deviations by the dots from the line \n","# would show a deviation from the expected distribution.\n","# ---\n","#\n","\n","# Importing libraries to plot our Q-Q plot\n","from statsmodels.graphics.gofplots import qqplot\n","from matplotlib import pyplot as plt\n","\n","# seed the random number generator\n","seed(1)\n","\n","# generate univariate observations\n","data = 5 * randn(100) + 50\n","\n","# q-q plot\n","qqplot(data, line='s')\n","plt.show()\n","\n","# The resulting QQ plot shows the scatter plot of points in a diagonal line, \n","# closely fitting the expected diagonal pattern for a sample from a Gaussian distribution.\n","# There are a few small deviations, especially at the bottom of the plot, \n","# which is to be expected given the small data sample."],"execution_count":6,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"BYTvjelSIk_A","colab_type":"text"},"source":["### <font color=\"green\">2.0 Challenges</font>"]},{"cell_type":"code","metadata":{"id":"v1mg93rBIpY9","colab_type":"code","outputId":"3e800043-bb72-436d-df14-cb1a10776342","executionInfo":{"status":"ok","timestamp":1588860391783,"user_tz":-180,"elapsed":4740,"user":{"displayName":"paul mwaura","photoUrl":"","userId":"05571276976991411894"}},"colab":{"base_uri":"https://localhost:8080/","height":296}},"source":["# Challenge 1\n","# ---\n","# Question: Determine whether the given data follows a normal distribution using the Q-Q plot\n","# ---\n","# Dataset url = http://bit.ly/GaussianDistributionDataset2\n","# \n","qq1 = pd.read_csv(\"http://bit.ly/GaussianDistributionDataset2\")\n","\n","qqplot(qq1, line='s')\n","plt.plot()"],"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[]"]},"metadata":{"tags":[]},"execution_count":7},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"code","metadata":{"id":"zVD9y_LB5z90","colab_type":"code","outputId":"f1330a56-2f5e-4fa0-c167-24c583c63053","executionInfo":{"status":"ok","timestamp":1588860393002,"user_tz":-180,"elapsed":5893,"user":{"displayName":"paul mwaura","photoUrl":"","userId":"05571276976991411894"}},"colab":{"base_uri":"https://localhost:8080/","height":296}},"source":["# Challenge 2\n","# ---\n","# Question: Plot the win by wickets data in the given dataset and watch the curve.\n","# Does the data follow a normal distribution\n","# ---\n","# Dataset url = http://bit.ly/IndianPremierLeagueDataset\n","# \n","win = pd.read_csv(\"http://bit.ly/IndianPremierLeagueDataset\")\n","\n","wickets = win['win_by_wickets']\n","\n","qqplot(wickets, line='s')\n","\n","plt.plot()"],"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["[]"]},"metadata":{"tags":[]},"execution_count":8},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"qWVD5HgDHYlL","colab_type":"text"},"source":["## 3.0 The Shapiro-Wilk Test"]},{"cell_type":"code","metadata":{"id":"mHA3iL6kHj_Y","colab_type":"code","outputId":"2f2f3e3f-bc23-4c9e-ecb5-52d8833bd280","executionInfo":{"status":"ok","timestamp":1588860459363,"user_tz":-180,"elapsed":1635,"user":{"displayName":"paul mwaura","photoUrl":"","userId":"05571276976991411894"}},"colab":{"base_uri":"https://localhost:8080/","height":51}},"source":["# Example 1\n","# ---\n","# The Shapiro-Wilk test evaluates a data sample and quantifies how likely it is that \n","# the data was drawn from a Gaussian distribution, named for Samuel Shapiro and Martin Wilk.\n","# In practice, the Shapiro-Wilk test is believed to be a reliable test of normality, \n","# although there is some suggestion that the test may be suitable for smaller samples of data, e.g. thousands of observations or fewer.\n","# The shapiro() SciPy function will calculate the Shapiro-Wilk on a given dataset. \n","# The function returns both the W-statistic calculated by the test and the p-value. \n","# ---\n","#\n","\n","# importing the shapiro function\n","from scipy.stats import shapiro \n","\n","# generating univariate observations\n","data = 5 * randn(100) + 50\n","\n","# testing for normality\n","stat, p = shapiro(data)\n","print('Statistics=%.3f, p=%.3f' % (stat, p))\n","\n","# interpreting\n","alpha = 0.05\n","if p > alpha:\n","\tprint('Sample looks Gaussian')\n","else:\n","\tprint('Sample does not look Gaussian')\n","  \n","# Running the example first calculates the test on the data sample, \n","# then prints the statistic and calculated p-value. \n","# The p-value is interested and finds that the data is likely drawn from a Gaussian distribution."],"execution_count":10,"outputs":[{"output_type":"stream","text":["Statistics=0.990, p=0.686\n","Sample looks Gaussian\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"XbBi43lTItC2","colab_type":"text"},"source":["### <font color=\"green\">3.0 Challenges</font>"]},{"cell_type":"code","metadata":{"id":"6gFhqrE5IyLi","colab_type":"code","outputId":"4e7ab99d-1343-4087-a09c-17393b6b0b1e","executionInfo":{"status":"ok","timestamp":1588744624890,"user_tz":-180,"elapsed":5758,"user":{"displayName":"paul mwaura","photoUrl":"","userId":"05571276976991411894"}},"colab":{"base_uri":"https://localhost:8080/","height":241}},"source":["# Challenge 1\n","# ---\n","# Question: Using The Shapiro-Wilk Test, determine whether the given data follows a normal distribution.\n","# ---\n","# Dataset url = http://bit.ly/GaussianDistributionDataset3\n","# \n","dataset3 = pd.read_csv(\"http://bit.ly/GaussianDistributionDataset3\", error_bad_lines=False)\n","dataset3.head()"],"execution_count":0,"outputs":[{"output_type":"stream","text":["b'Skipping line 49: expected 1 fields, saw 2\\nSkipping line 80: expected 1 fields, saw 3\\nSkipping line 127: expected 1 fields, saw 3\\nSkipping line 144: expected 1 fields, saw 6\\nSkipping line 145: expected 1 fields, saw 3\\nSkipping line 169: expected 1 fields, saw 4\\nSkipping line 173: expected 1 fields, saw 2\\nSkipping line 175: expected 1 fields, saw 2\\nSkipping line 176: expected 1 fields, saw 2\\nSkipping line 177: expected 1 fields, saw 2\\nSkipping line 178: expected 1 fields, saw 2\\nSkipping line 179: expected 1 fields, saw 2\\nSkipping line 180: expected 1 fields, saw 2\\nSkipping line 181: expected 1 fields, saw 2\\nSkipping line 182: expected 1 fields, saw 2\\nSkipping line 186: expected 1 fields, saw 2\\nSkipping line 187: expected 1 fields, saw 2\\nSkipping line 193: expected 1 fields, saw 2\\nSkipping line 196: expected 1 fields, saw 2\\nSkipping line 204: expected 1 fields, saw 4\\nSkipping line 210: expected 1 fields, saw 2\\nSkipping line 215: expected 1 fields, saw 2\\nSkipping line 216: expected 1 fields, saw 2\\nSkipping line 217: expected 1 fields, saw 2\\nSkipping line 218: expected 1 fields, saw 2\\nSkipping line 219: expected 1 fields, saw 2\\nSkipping line 224: expected 1 fields, saw 2\\nSkipping line 225: expected 1 fields, saw 2\\nSkipping line 226: expected 1 fields, saw 2\\nSkipping line 233: expected 1 fields, saw 2\\nSkipping line 241: expected 1 fields, saw 4\\nSkipping line 246: expected 1 fields, saw 2\\nSkipping line 249: expected 1 fields, saw 2\\nSkipping line 250: expected 1 fields, saw 2\\nSkipping line 254: expected 1 fields, saw 2\\nSkipping line 255: expected 1 fields, saw 2\\nSkipping line 277: expected 1 fields, saw 2\\nSkipping line 415: expected 1 fields, saw 6\\nSkipping line 416: expected 1 fields, saw 3\\nSkipping line 421: expected 1 fields, saw 6\\nSkipping line 422: expected 1 fields, saw 3\\nSkipping line 508: expected 1 fields, saw 6\\nSkipping line 519: expected 1 fields, saw 6\\nSkipping line 532: expected 1 fields, saw 6\\nSkipping line 685: expected 1 fields, saw 3\\nSkipping line 690: expected 1 fields, saw 3\\nSkipping line 691: expected 1 fields, saw 8\\nSkipping line 761: expected 1 fields, saw 2\\nSkipping line 815: expected 1 fields, saw 2\\nSkipping line 818: expected 1 fields, saw 2\\nSkipping line 4895: expected 1 fields, saw 2\\nSkipping line 4896: expected 1 fields, saw 3\\nSkipping line 4897: expected 1 fields, saw 3\\nSkipping line 4898: expected 1 fields, saw 3\\nSkipping line 4899: expected 1 fields, saw 3\\nSkipping line 4900: expected 1 fields, saw 3\\nSkipping line 4908: expected 1 fields, saw 3\\nSkipping line 4909: expected 1 fields, saw 3\\nSkipping line 4910: expected 1 fields, saw 3\\nSkipping line 4911: expected 1 fields, saw 3\\nSkipping line 4912: expected 1 fields, saw 3\\nSkipping line 4913: expected 1 fields, saw 3\\n'\n"],"name":"stderr"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>&lt;!DOCTYPE html&gt;</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>&lt;html lang=\"en\"&gt;</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>&lt;head&gt;</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>&lt;meta charset=\"utf-8\"&gt;</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>&lt;link rel=\"dns-prefetch\" href=\"https://githu...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>&lt;link rel=\"dns-prefetch\" href=\"https://avata...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["                                     <!DOCTYPE html>\n","0                                   <html lang=\"en\">\n","1                                             <head>\n","2                             <meta charset=\"utf-8\">\n","3    <link rel=\"dns-prefetch\" href=\"https://githu...\n","4    <link rel=\"dns-prefetch\" href=\"https://avata..."]},"metadata":{"tags":[]},"execution_count":21}]},{"cell_type":"code","metadata":{"id":"a61cTrtF92QC","colab_type":"code","outputId":"3305ddac-ea6f-439a-f9a5-168d2e3ace90","executionInfo":{"status":"ok","timestamp":1588860545677,"user_tz":-180,"elapsed":1611,"user":{"displayName":"paul mwaura","photoUrl":"","userId":"05571276976991411894"}},"colab":{"base_uri":"https://localhost:8080/","height":51}},"source":["# Challenge 2\n","# ---\n","# Question: Plot the win by runs data in the given dataset and watch the curve.\n","# Does the data follow a normal distribution\n","# ---\n","# Dataset url = http://bit.ly/IndianPremierLeagueDataset\n","# \n","india_league = pd.read_csv(\"http://bit.ly/IndianPremierLeagueDataset\")\n","\n","\n","runs = india_league['win_by_runs']\n","\n","# testing for normality\n","stat, p = shapiro(runs)\n","print('Statistics=%.3f, p=%.6f' % (stat, p))\n","\n","# interpreting\n","alpha = 0.05\n","if p > alpha:\n","\tprint('Sample looks Gaussian')\n","else:\n","\tprint('Sample does not look Gaussian')"],"execution_count":11,"outputs":[{"output_type":"stream","text":["Statistics=0.638, p=0.000000\n","Sample does not look Gaussian\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"tw66CC27HlKj","colab_type":"text"},"source":["## 4.0 Anderson-Darling Test\n"]},{"cell_type":"code","metadata":{"id":"0AxqNBpEHktu","colab_type":"code","outputId":"37b4a01b-420f-45b4-c21b-49340d434ecb","executionInfo":{"status":"ok","timestamp":1588744625376,"user_tz":-180,"elapsed":6221,"user":{"displayName":"paul mwaura","photoUrl":"","userId":"05571276976991411894"}},"colab":{"base_uri":"https://localhost:8080/","height":119}},"source":["# Example 1\n","# ---\n","# Anderson-Darling Test is a statistical test that can be used to evaluate \n","# whether a data sample comes from one of among many known data samples, named for Theodore Anderson and Donald Darling.\n","# It can be used to check whether a data sample is normal. \n","# The test is a modified version of a more sophisticated nonparametric goodness-of-fit statistical test called the Kolmogorov-Smirnov test.\n","# A feature of the Anderson-Darling test is that it returns a list of critical values rather than a single p-value. \n","# This can provide the basis for a more thorough interpretation of the result.\n","# The anderson() SciPy function implements the Anderson-Darling test. \n","# It takes as parameters the data sample and the name of the distribution to test it against. \n","# By default, the test will check against the Gaussian distribution (dist=’norm’).\n","# ---\n","# \n","\n","# Importing anderson function form scipy \n","from scipy.stats import anderson\n","\n","# seed the random number generator\n","seed(1)\n","\n","# generate univariate observations\n","data = 5 * randn(100) + 50\n","\n","# normality test\n","result = anderson(data)\n","print('Statistic: %.3f' % result.statistic)\n","p = 0\n","for i in range(len(result.critical_values)):\n","\tsl, cv = result.significance_level[i], result.critical_values[i]\n","\tif result.statistic < result.critical_values[i]:\n","\t\tprint('%.3f: %.3f, data looks normal' % (sl, cv))\n","\telse:\n","\t\tprint('%.3f: %.3f, data does not look normal' % (sl, cv))\n","    \n","# Running this example calculates the statistic on the test data set and prints the critical values.\n","# Critical values in a statistical test are a range of pre-defined significance boundaries at which \n","# the H0 can be failed to be rejected if the calculated statistic is less than the critical value. \n","# More on Critical values: http://bit.ly/CriticalValues.\n","# Rather than just a single p-value, the test returns a critical value for a range of different commonly used significance levels.\n","# We can interpret the results by failing to reject the null hypothesis that the data is normal \n","# if the calculated test statistic is less than the critical value at a chosen significance level.\n","# We can see that at each significance level, the test has found that the data follows a normal distribution."],"execution_count":0,"outputs":[{"output_type":"stream","text":["Statistic: 0.220\n","15.000: 0.555, data looks normal\n","10.000: 0.632, data looks normal\n","5.000: 0.759, data looks normal\n","2.500: 0.885, data looks normal\n","1.000: 1.053, data looks normal\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"5gSMhKaEI05P","colab_type":"text"},"source":["### <font color=\"green\">4.0 Challenges</font>"]},{"cell_type":"code","metadata":{"id":"0_Sh6wYpI42o","colab_type":"code","outputId":"0e9b8163-89e0-4175-aed8-c50c58d82c82","executionInfo":{"status":"ok","timestamp":1588746180463,"user_tz":-180,"elapsed":2150,"user":{"displayName":"paul mwaura","photoUrl":"","userId":"05571276976991411894"}},"colab":{"base_uri":"https://localhost:8080/","height":119}},"source":["# Challenge 1 \n","# ---\n","# Question: Determine whether the given dataset follows a Gaussian Distribution\n","# ---\n","# Dataset url = http://bit.ly/GaussianDistributionDataset4\n","#\n","\n","df4 = pd.read_csv('http://bit.ly/GaussianDistributionDataset4')\n","df4.head()\n","\n","result = anderson(df4['3.455053852018261296e+01'])\n","\n","print('Statistic: %.3f' % result.statistic)\n","p = 0\n","for i in range(len(result.critical_values)):\n","  sl, cv = result.significance_level[i], result.critical_values[i]\n","  if result.statistic < result.critical_values[i]:\n","    print('%.3f: %.3f, data looks normal' % (sl, cv))\n","  else:\n","    print('%.3f: %.3f, data does not look normal' % (sl, cv))"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Statistic: 12.195\n","15.000: 0.574, data does not look normal\n","10.000: 0.653, data does not look normal\n","5.000: 0.784, data does not look normal\n","2.500: 0.914, data does not look normal\n","1.000: 1.088, data does not look normal\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"colab_type":"code","id":"3_LtL00f7og6","colab":{}},"source":["# Challenge 2\n","# ---\n","# Question: Plot the win by runs data in the given dataset and watch the curve.\n","# Does the data follow a normal distribution\n","# ---\n","# Dataset url = http://bit.ly/IndianPremierLeagueDataset\n","# \n","india_league = pd.read_csv(\"http://bit.ly/IndianPremierLeagueDataset\")\n","\n","result = anderson(india_league['win_by_runs'])\n","\n","print('Statistic: %.3f' % result.statistic)\n","p = 0\n","for i in range(len(result.critical_values)):\n","\tsl, cv = result.significance_level[i], result.critical_values[i]\n","\tif result.statistic < result.critical_values[i]:\n","\t\tprint('%.3f: %.3f, data looks normal' % (sl, cv))\n","\telse:\n","\t\tprint('%.3f: %.3f, data does not look normal' % (sl, cv))"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"pWrZOT_QHu_5","colab_type":"text"},"source":["## 5.0 D’Agostino’s K^2 Test"]},{"cell_type":"code","metadata":{"id":"kx8Q3c6xIMJ9","colab_type":"code","outputId":"8f4f0e70-334f-4081-d0ce-ee4176749850","executionInfo":{"status":"ok","timestamp":1588744655291,"user_tz":-180,"elapsed":1091,"user":{"displayName":"paul mwaura","photoUrl":"","userId":"05571276976991411894"}},"colab":{"base_uri":"https://localhost:8080/","height":51}},"source":["# Example 1\n","# ---\n","# The D’Agostino’s K^2 test calculates summary statistics from the data, namely kurtosis and skewness, \n","# to determine if the data distribution departs from the normal distribution, named for Ralph D’Agostino.\n","# -> Skew is a quantification of how much a distribution is pushed left or right, a measure of asymmetry in the distribution.\n","# -> Kurtosis quantifies how much of the distribution is in the tail. It is a simple and commonly used statistical test for normality.\n","# The D’Agostino’s K^2 test is available via the normaltest() SciPy function and returns the test statistic and the p-value.\n","# ---\n","\n","from numpy.random import seed\n","from numpy.random import randn\n","from scipy.stats import normaltest\n","# seed the random number generator\n","seed(1)\n","# generate univariate observations\n","data = 5 * randn(100) + 50\n","\n","# normality test\n","stat, p = normaltest(data)\n","print('Statistics=%.3f, p=%.3f' % (stat, p))\n","\n","# interpret\n","alpha = 0.05\n","if p > alpha:\n","\tprint('Sample looks Gaussian')\n","else:\n","\tprint('Sample does not look Gaussian')"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Statistics=0.102, p=0.950\n","Sample looks Gaussian\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"eE37tkQCI8lN","colab_type":"text"},"source":["### <font color=\"green\">5.0 Challenges</font>"]},{"cell_type":"code","metadata":{"id":"ga0fWL-6JAbn","colab_type":"code","colab":{}},"source":["# Challenge 1\n","# ---\n","# Question: Using D’Agostino’s K^2 Test, determine whether the given data follows a normal distribution.\n","# ---\n","# Dataset url = http://bit.ly/GaussianDistributionDataset3\n","# \n","OUR CODE GOES HERE"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"ICPWiAoEJBvc","colab_type":"code","outputId":"5fbe55f1-0dc4-45ac-e346-bd2d90aba73c","executionInfo":{"status":"ok","timestamp":1588744665693,"user_tz":-180,"elapsed":2550,"user":{"displayName":"paul mwaura","photoUrl":"","userId":"05571276976991411894"}},"colab":{"base_uri":"https://localhost:8080/","height":51}},"source":["# Challenge 2\n","# ---\n","# Question: From the fifa dataset given below, does the overall rating data follow a normal distribution? \n","# If your sample follows a normal distribution, does this makes sense to you? Explain why.\n","# If your sample does not follow a normal distribution (e.g., it could be skewed left or right, \n","# have a uniform distribution, or have some other shape), then why might this be the reason?\n","# ---\n","# Dataset url = http://bit.ly/FifaDataset\n","# \n","fifa = pd.read_csv(\"http://bit.ly/FifaDataset\")\n","\n","stat, p = normaltest(fifa['Overall'])\n","\n","print('Statistics=%.3f, p=%.3f' % (stat, p))\n","\n","alpha = 0.05\n","if p > alpha:\n","\tprint('Sample looks Gaussian')\n","else:\n","\tprint('Sample does not look Gaussian')"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Statistics=20.219, p=0.000\n","Sample does not look Gaussian\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"PWPpyTdDIZZ-","colab_type":"text"},"source":["## 6.0 Further Readings"]},{"cell_type":"markdown","metadata":{"id":"UhPRWBIiH1jp","colab_type":"text"},"source":["Other plots that we have not covered in this session but are also worth exploring include:\n","\n","\n","*   Box Plots.\n","*   The Kolmogorov-Smirnov test.\n","\n","\n"]}]}